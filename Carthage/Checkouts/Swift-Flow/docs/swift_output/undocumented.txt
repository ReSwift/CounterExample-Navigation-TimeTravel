StoreSubscriber.swift
	public protocol AnyStoreSubscriber: class
	func _newState(state: StateType)
	public protocol StoreSubscriber: AnyStoreSubscriber
	func newState(state: StoreSubscriberStateType)
	public protocol StoreSubscriber : AnyStoreSubscriber
	public func _newState(state: StateType)
Coding.swift
	public protocol Coding
	init(dictionary: [String : AnyObject])
	func dictionaryRepresentation() -> [String : AnyObject]
Action.swift
	public init(dictionary: [String : AnyObject])
	public func dictionaryRepresentation() -> [String : AnyObject]
Reducer.swift
	public protocol AnyReducer
	func _handleAction(state: StateType, action: Action) -> StateType
	public protocol Reducer: AnyReducer
	func handleAction(state: ReducerStateType, action: Action) -> ReducerStateType
	public protocol Reducer : AnyReducer
	public func _handleAction(state: StateType, action: Action) -> StateType
CombinedReducer.swift
	public func _handleAction(state: StateType, action: Action) -> StateType
State.swift
	public protocol StateType
	init()
